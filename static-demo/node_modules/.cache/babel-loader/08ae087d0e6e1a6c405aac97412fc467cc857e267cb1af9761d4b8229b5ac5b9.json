{"ast":null,"code":"import React,{useState}from'react';import{Box,Typography,Paper,Table,TableHead,TableRow,TableCell,TableBody}from'@mui/material';import{trainModel}from'../mockData/mockApi';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function ModelDemo(){const[model,setModel]=useState(null);React.useEffect(()=>{trainModel().then(setModel);},[]);return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"ML Model Builder\"}),model?/*#__PURE__*/_jsxs(Paper,{sx:{mt:2,p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Decision Tree Results\"}),/*#__PURE__*/_jsxs(Typography,{children:[\"Accuracy: \",model.accuracy]}),/*#__PURE__*/_jsx(Typography,{children:\"Confusion Matrix:\"}),/*#__PURE__*/_jsx(Table,{size:\"small\",children:/*#__PURE__*/_jsx(TableBody,{children:model.confusion_matrix.map((row,i)=>/*#__PURE__*/_jsx(TableRow,{children:row.map((cell,j)=>/*#__PURE__*/_jsx(TableCell,{children:cell},j))},i))})}),/*#__PURE__*/_jsxs(Typography,{children:[\"Sample Predictions: \",model.sample_predictions.join(', ')]})]}):/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:\"Load demo data to train a model.\"})]});}","map":{"version":3,"names":["React","useState","Box","Typography","Paper","Table","TableHead","TableRow","TableCell","TableBody","trainModel","jsx","_jsx","jsxs","_jsxs","ModelDemo","model","setModel","useEffect","then","children","variant","gutterBottom","sx","mt","p","accuracy","size","confusion_matrix","map","row","i","cell","j","sample_predictions","join"],"sources":["/Users/andrewmusa/Documents/Projects/InsightFlow/Untitled/InsightFlow/static-demo/src/pages/ModelDemo.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Typography, Paper, Table, TableHead, TableRow, TableCell, TableBody } from '@mui/material';\nimport { trainModel } from '../mockData/mockApi';\n\nexport default function ModelDemo() {\n  const [model, setModel] = useState(null);\n\n  React.useEffect(() => {\n    trainModel().then(setModel);\n  }, []);\n\n  return (\n    <Box>\n      <Typography variant=\"h6\" gutterBottom>\n        ML Model Builder\n      </Typography>\n      {model ? (\n        <Paper sx={{ mt: 2, p: 2 }}>\n          <Typography variant=\"subtitle1\">Decision Tree Results</Typography>\n          <Typography>Accuracy: {model.accuracy}</Typography>\n          <Typography>Confusion Matrix:</Typography>\n          <Table size=\"small\">\n            <TableBody>\n              {model.confusion_matrix.map((row, i) => (\n                <TableRow key={i}>\n                  {row.map((cell, j) => <TableCell key={j}>{cell}</TableCell>)}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          <Typography>Sample Predictions: {model.sample_predictions.join(', ')}</Typography>\n        </Paper>\n      ) : (\n        <Typography variant=\"body1\">Load demo data to train a model.</Typography>\n      )}\n    </Box>\n  );\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,GAAG,CAAEC,UAAU,CAAEC,KAAK,CAAEC,KAAK,CAAEC,SAAS,CAAEC,QAAQ,CAAEC,SAAS,CAAEC,SAAS,KAAQ,eAAe,CACxG,OAASC,UAAU,KAAQ,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEjD,cAAe,SAAS,CAAAC,SAASA,CAAA,CAAG,CAClC,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CAExCD,KAAK,CAACkB,SAAS,CAAC,IAAM,CACpBR,UAAU,CAAC,CAAC,CAACS,IAAI,CAACF,QAAQ,CAAC,CAC7B,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEH,KAAA,CAACZ,GAAG,EAAAkB,QAAA,eACFR,IAAA,CAACT,UAAU,EAACkB,OAAO,CAAC,IAAI,CAACC,YAAY,MAAAF,QAAA,CAAC,kBAEtC,CAAY,CAAC,CACZJ,KAAK,cACJF,KAAA,CAACV,KAAK,EAACmB,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAE,CAAE,CAAAL,QAAA,eACzBR,IAAA,CAACT,UAAU,EAACkB,OAAO,CAAC,WAAW,CAAAD,QAAA,CAAC,uBAAqB,CAAY,CAAC,cAClEN,KAAA,CAACX,UAAU,EAAAiB,QAAA,EAAC,YAAU,CAACJ,KAAK,CAACU,QAAQ,EAAa,CAAC,cACnDd,IAAA,CAACT,UAAU,EAAAiB,QAAA,CAAC,mBAAiB,CAAY,CAAC,cAC1CR,IAAA,CAACP,KAAK,EAACsB,IAAI,CAAC,OAAO,CAAAP,QAAA,cACjBR,IAAA,CAACH,SAAS,EAAAW,QAAA,CACPJ,KAAK,CAACY,gBAAgB,CAACC,GAAG,CAAC,CAACC,GAAG,CAAEC,CAAC,gBACjCnB,IAAA,CAACL,QAAQ,EAAAa,QAAA,CACNU,GAAG,CAACD,GAAG,CAAC,CAACG,IAAI,CAAEC,CAAC,gBAAKrB,IAAA,CAACJ,SAAS,EAAAY,QAAA,CAAUY,IAAI,EAARC,CAAoB,CAAC,CAAC,EAD/CF,CAEL,CACX,CAAC,CACO,CAAC,CACP,CAAC,cACRjB,KAAA,CAACX,UAAU,EAAAiB,QAAA,EAAC,sBAAoB,CAACJ,KAAK,CAACkB,kBAAkB,CAACC,IAAI,CAAC,IAAI,CAAC,EAAa,CAAC,EAC7E,CAAC,cAERvB,IAAA,CAACT,UAAU,EAACkB,OAAO,CAAC,OAAO,CAAAD,QAAA,CAAC,kCAAgC,CAAY,CACzE,EACE,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}